
package GUI;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.Point;
import javax.swing.JButton;

import codeCritic.CriticalTextAnalyzer;
import codeCritic.Detector;

import java.awt.Rectangle;
import java.awt.Color;
import java.awt.Dimension;
import java.io.IOException;

public class MainScreen {

	public static JFrame jFrameMainScreen = null;  
	private JPanel jContentPane = null;
	private JMenuBar jJMenuBar = null;
	private JMenu fileMenu = null;
	private JMenu editMenu = null;
	private JMenu helpMenu = null;
	private JMenuItem exitMenuItem = null;
	private JMenuItem aboutMenuItem = null;
	private JMenuItem cutMenuItem = null;
	private JMenuItem copyMenuItem = null;
	private JMenuItem pasteMenuItem = null;
	private JMenuItem saveMenuItem = null;
	private JDialog aboutDialog = null;
	private JPanel aboutContentPane = null;
	private JLabel aboutVersionLabel = null;
	private JPanel step1JPanel = null;
	private JPanel step2JPanel = null;
	private JPanel step3JPanel = null;
	private JTextField browseJTextField = null;
	private JButton browseJButton = null;
	private JRadioButton smell4JRadioButton = null;
	private JRadioButton smell1JRadioButton = null;
	private JRadioButton smell3JRadioButton = null;
	private JRadioButton smell2JRadioButton = null;
	private JLabel smell1JLabel = null;
	private JLabel smell4JLabel = null;
	private JLabel smell3JLabel = null;
	private JLabel smell2JLabel = null;
	private JButton start_Button = null;
	private JButton configuration_Button = null;
	private JButton exit_Button = null;
	private JButton codeSmellInfojButton = null;
	private JPanel mainJPanel = null;	
	private JPanel browseJPanel;

	private boolean bloaterFlag = false;
	private boolean lazyFlag = false;
	private boolean obsessionFlag = false;
	private boolean envyFlag = false;

	/**
	 * @wbp.parser.entryPoint
	 */
	public MainScreen(){
		getJFrame().setVisible(true);
	}


	/**
	 * This method initializes jFrame
	 * 
	 * @return javax.swing.JFrame
	 */
	JFrame getJFrame() {
		if (jFrameMainScreen == null) {
			jFrameMainScreen = new JFrame();
			jFrameMainScreen.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			jFrameMainScreen.setResizable(false);
			jFrameMainScreen.setJMenuBar(getJJMenuBar());
			jFrameMainScreen.setSize(625, 570);
			jFrameMainScreen.setLocationRelativeTo(null);//Centre Window for everyones display
			jFrameMainScreen.setContentPane(getJContentPane());
			jFrameMainScreen.setTitle("Code Sniffer Pro - Special Addition Version 1.1");
		}
		return jFrameMainScreen;
	}

	private JPanel getJContentPane() {
		if (jContentPane == null) {
			jContentPane = new JPanel();
			jContentPane.setLayout(new BorderLayout());
			jContentPane.add(getMainJPanel(), null);
		}
		return jContentPane;
	}

	private JPanel getMainJPanel(){
		if(mainJPanel == null){
			mainJPanel = new JPanel();
			mainJPanel.setLayout(null);
			mainJPanel.add(getStep1JPanel());
			mainJPanel.add(getStep2JPanel());
			mainJPanel.add(getStep3JPanel());
		}
		return mainJPanel;
	}

	private JPanel getStep1JPanel(){
		if(step1JPanel == null){
			step1JPanel = new JPanel();
			step1JPanel.setBounds(29, 22, 567, 103);
			step1JPanel.setLayout(null);
			step1JPanel.setBorder(new TitledBorder("Step 1 - Choose Project "));
			step1JPanel.add(getBrowseJPanel());
		}
		return step1JPanel;
	}

	private JPanel getStep2JPanel(){
		if(step2JPanel == null){
			step2JPanel = new JPanel();
			step2JPanel.setLayout(null);
			step2JPanel.setBounds(29, 137, 567, 199);
			step2JPanel.setBorder(new TitledBorder("Step 2 - Choose code smells to analyse "));
			step2JPanel.add(getCodeSmellInfoJButton());
			step2JPanel.add(getSmell1JLabel());
			step2JPanel.add(getSmell2JLabel());
			step2JPanel.add(getSmell3JLabel());
			step2JPanel.add(getSmell4JLabel());
			step2JPanel.add(getSmell1JRadioButton());
			step2JPanel.add(getSmell2JRadioButton());
			step2JPanel.add(getSmell3JRadioButton());
			step2JPanel.add(getSmell4JRadioButton());


			
		}
		return step2JPanel;
	}

	private JPanel getStep3JPanel(){
		if(step3JPanel == null){
			step3JPanel = new JPanel();
			step3JPanel.setLayout(null);
			step3JPanel.setBounds(29, 348, 567, 154);
			step3JPanel.setBorder(new TitledBorder("Step 3 - Begin Analysis "));
			step3JPanel.add(getConfig_button());
			step3JPanel.add(getExit_button());
			step3JPanel.add(getStart_button());

			
		}
		return step3JPanel;
	}
	
	private JPanel getBrowseJPanel() {
		if (browseJPanel == null) {
			browseJPanel = new JPanel();
			browseJPanel.setLayout(null);
			browseJPanel.setBounds(49, 45, 460, 22);
			browseJPanel.add(getBrowseJButton());
			browseJPanel.add(getBrowseJTextField());
		}
		return browseJPanel;
	}

	//-------------------------------------------------JLabels--------------------------------------------------//

	private JLabel getSmell1JLabel(){
		if(smell1JLabel == null){
			smell1JLabel = new JLabel();
			smell1JLabel.setBounds(76, 50, 53, 20);
			smell1JLabel.setText("Bloater");
		}
		return smell1JLabel;
	}

	private JLabel getSmell2JLabel(){
		if(smell2JLabel == null){
			smell2JLabel = new JLabel();
			smell2JLabel.setText("Primitive Obsession");
			smell2JLabel.setBounds(76, 99, 134, 20);

		}
		return smell2JLabel;
	}

	private JLabel getSmell3JLabel(){
		if(smell3JLabel == null){
			smell3JLabel = new JLabel();
			smell3JLabel.setText("Feature Envy");
			smell3JLabel.setBounds(313, 50, 85, 20);

		}
		return smell3JLabel;
	}

	private JLabel getSmell4JLabel(){
		if(smell4JLabel == null){
			smell4JLabel = new JLabel();
			smell4JLabel.setText("Lazy Class");
			smell4JLabel.setBounds(313, 99, 85, 20);

		}
		return smell4JLabel;
	}

	//-------------------------------------------------About Screen Stuff--------------------------------------------------//

	/**
	 * This method initializes aboutVersionLabel	
	 * 	
	 * @return javax.swing.JLabel	
	 */
	private JLabel getAboutVersionLabel() {
		if (aboutVersionLabel == null) {
			aboutVersionLabel = new JLabel();
			aboutVersionLabel.setText("Version 1.0");
			aboutVersionLabel.setHorizontalAlignment(SwingConstants.CENTER);
		}
		return aboutVersionLabel;
	}

	/**
	 * This method initializes aboutDialog	
	 * 	
	 * @return javax.swing.JDialog
	 */
	private JDialog getAboutDialog() {
		if (aboutDialog == null) {
			aboutDialog = new JDialog(getJFrame(), true);
			aboutDialog.setTitle("About");
			aboutDialog.setContentPane(getAboutContentPane());
		}
		return aboutDialog;
	}

	/**
	 * This method initializes aboutContentPane
	 * 
	 * @return javax.swing.JPanel
	 */
	private JPanel getAboutContentPane() {
		if (aboutContentPane == null) {
			aboutContentPane = new JPanel();
			aboutContentPane.setLayout(new BorderLayout());
			aboutContentPane.add(getAboutVersionLabel(), BorderLayout.CENTER);
		}
		return aboutContentPane;
	}

	//-------------------------------------------------JMenuItems--------------------------------------------------//

	/**
	 * This method initializes jJMenuBar	
	 * 	
	 * @return javax.swing.JMenuBar	
	 */
	private JMenuBar getJJMenuBar() {
		if (jJMenuBar == null) {
			jJMenuBar = new JMenuBar();
			jJMenuBar.add(getFileMenu());
			jJMenuBar.add(getEditMenu());
			jJMenuBar.add(getHelpMenu());
		}
		return jJMenuBar;
	}

	/**
	 * This method initializes jMenu	
	 * 	
	 * @return javax.swing.JMenu	
	 */
	private JMenu getFileMenu() {
		if (fileMenu == null) {
			fileMenu = new JMenu();
			fileMenu.setText("File");
			fileMenu.add(getSaveMenuItem());
			fileMenu.add(getExitMenuItem());
		}
		return fileMenu;
	}

	/**
	 * This method initializes jMenu	
	 * 	
	 * @return javax.swing.JMenu	
	 */
	private JMenu getEditMenu() {
		if (editMenu == null) {
			editMenu = new JMenu();
			editMenu.setText("Edit");
			editMenu.add(getCutMenuItem());
			editMenu.add(getCopyMenuItem());
			editMenu.add(getPasteMenuItem());
		}
		return editMenu;
	}

	/**
	 * This method initializes jMenu	
	 * 	
	 * @return javax.swing.JMenu	
	 */
	private JMenu getHelpMenu() {
		if (helpMenu == null) {
			helpMenu = new JMenu();
			helpMenu.setText("Help");
			helpMenu.add(getAboutMenuItem());
		}
		return helpMenu;
	}

	/**
	 * This method initializes jMenuItem	
	 * 	
	 * @return javax.swing.JMenuItem	
	 */
	private JMenuItem getExitMenuItem() {
		if (exitMenuItem == null) {
			exitMenuItem = new JMenuItem();
			exitMenuItem.setText("Exit");
			exitMenuItem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent e) {
					System.exit(0);
				}
			});
		}
		return exitMenuItem;
	}

	/**
	 * This method initializes jMenuItem	
	 * 	
	 * @return javax.swing.JMenuItem	
	 */
	private JMenuItem getAboutMenuItem() {
		if (aboutMenuItem == null) {
			aboutMenuItem = new JMenuItem();
			aboutMenuItem.setText("About");
			aboutMenuItem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent e) {
					JDialog aboutDialog = getAboutDialog();
					aboutDialog.pack();
					Point loc = getJFrame().getLocation();
					loc.translate(20, 20);
					aboutDialog.setLocation(loc);
					aboutDialog.setVisible(true);
				}
			});
		}
		return aboutMenuItem;
	}

	/**
	 * This method initializes jMenuItem	
	 * 	
	 * @return javax.swing.JMenuItem	
	 */
	private JMenuItem getCutMenuItem() {
		if (cutMenuItem == null) {
			cutMenuItem = new JMenuItem();
			cutMenuItem.setText("Cut");
			cutMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X,
					Event.CTRL_MASK, true));
		}
		return cutMenuItem;
	}

	/**
	 * This method initializes jMenuItem	
	 * 	
	 * @return javax.swing.JMenuItem	
	 */
	private JMenuItem getCopyMenuItem() {
		if (copyMenuItem == null) {
			copyMenuItem = new JMenuItem();
			copyMenuItem.setText("Copy");
			copyMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C,
					Event.CTRL_MASK, true));
		}
		return copyMenuItem;
	}

	/**
	 * This method initializes jMenuItem	
	 * 	
	 * @return javax.swing.JMenuItem	
	 */
	private JMenuItem getPasteMenuItem() {
		if (pasteMenuItem == null) {
			pasteMenuItem = new JMenuItem();
			pasteMenuItem.setText("Paste");
			pasteMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_V,
					Event.CTRL_MASK, true));
		}
		return pasteMenuItem;
	}

	/**
	 * This method initializes jMenuItem	
	 * 	
	 * @return javax.swing.JMenuItem	
	 */
	private JMenuItem getSaveMenuItem() {
		if (saveMenuItem == null) {
			saveMenuItem = new JMenuItem();
			saveMenuItem.setText("Save");
			saveMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S,
					Event.CTRL_MASK, true));
		}
		return saveMenuItem;
	}

	/**
	 * This method initializes browseJTextField	
	 * 	
	 * @return javax.swing.JTextField	
	 */
	private JTextField getBrowseJTextField() {
		if (browseJTextField == null) {
			browseJTextField = new JTextField();
			browseJTextField.setMargin(null);
			browseJTextField.setBounds(0, 0, 400, 22);
		}
		return browseJTextField;
	}


	//-------------------------------------------------JButtons--------------------------------------------------//

	/**
	 * This method initializes config_button	
	 * 	
	 * @return javax.swing.JButton	
	 */
	private JButton getConfig_button() {
		if (configuration_Button == null) {
			configuration_Button = new JButton();
			configuration_Button.setText("Smell Settings");
			configuration_Button.setToolTipText("Click to Enter Configuration Settings");
			configuration_Button.setBounds(221, 68, 117, 30);
			configuration_Button.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent e) {

					Config configPage = new Config();
				}
			});
		}
		return configuration_Button;
	}

	/**
	 * This method initializes exit_button1	
	 * 	
	 * @return javax.swing.JButton	
	 */
	private JButton getExit_button() {
		if (exit_Button == null) {
			exit_Button = new JButton();
			exit_Button.setText("Quit");
			exit_Button.setToolTipText("Quit Application");
			exit_Button.setBounds(396, 68, 100, 30);
			exit_Button.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent e) {
					System.exit(0);
				}
			});

		}
		return exit_Button;
	}

	/**
	 * This method initializes direc_button	
	 * 	
	 * @return javax.swing.JButton	
	 */
	private JButton getBrowseJButton() {
		if (browseJButton == null) {
			browseJButton = new JButton();
			browseJButton.setBounds(390, 0, 70, 22);
			browseJButton.setToolTipText("Open Project for Analysis");
			browseJButton.setText("Browse");
			browseJButton.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent e) {
					//File choose to let you choose a directory
					JFileChooser chooser = new JFileChooser();
					chooser.setCurrentDirectory(new java.io.File("."));
					chooser.setDialogTitle("Choose Project to Analyse");
					chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
					chooser.setAcceptAllFileFilterUsed(true);

					if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {

						//sets the text area in step 1 to the Directory choosen by the user
						browseJTextField.setText(chooser.getSelectedFile().getAbsolutePath());

					} else {
						System.out.println("No Selection ");

					}
				}
			});



		}
		return browseJButton;
	}

	/**
	 * This method initializes start_button	
	 * 	
	 * @return javax.swing.JButton	
	 */
	private JButton getStart_button() {
		if (start_Button == null) {
			start_Button = new JButton();
			start_Button.setText("Start");
			start_Button.setToolTipText("Run Code Sniffer Pro");
			start_Button.setBounds(63, 68, 100, 30);
			start_Button.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent e) {
					CriticalTextAnalyzer cta = null;
					try {
						cta = new CriticalTextAnalyzer(browseJTextField.getText());
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
					cta.getNumberOfClasses();
					System.out.println("STILL WORKING");
					Detector detector = new Detector();
					detector.setCTA(cta);
					System.out.println("GO SMELL!!!");
					detector.detectSmells(bloaterFlag);
					detector.outputReport();
					//					
				}
			});
		}
		return start_Button;
	}

	/**
	 * This method initializes codeSmell_Info_Button	
	 * 	
	 * @return javax.swing.JButton	
	 */
	private JButton getCodeSmellInfoJButton() {
		if (codeSmellInfojButton == null) {
			codeSmellInfojButton = new JButton();
			codeSmellInfojButton.setBounds(410, 163, 151, 30);
			codeSmellInfojButton.setToolTipText("Click to View Information on Code Smells");
			codeSmellInfojButton.setText("Smells Information");
			codeSmellInfojButton.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent e) {
					//					CodeSmells codesmell = new CodeSmells();
					//					jFrameMainScreen.setVisible(true);
					//					codesmell.getJFrame().setVisible(true);
				}
			});
		}
		return codeSmellInfojButton;
	}


	//-------------------------------------------------JRadioButtons--------------------------------------------------//

	/**
	 * This method initializes rbt_smell_1	
	 * 	
	 * @return javax.swing.JRadioButton	
	 */
	private JRadioButton getSmell1JRadioButton() {
		if (smell1JRadioButton == null) {
			smell1JRadioButton = new JRadioButton();
			smell1JRadioButton.setBounds(43, 50, 21, 22);
			smell1JRadioButton.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent e) {
					if(bloaterFlag == false){
						bloaterFlag = true;
					}
					else{
						bloaterFlag = false;
					}
				}
			});
		}
		return smell1JRadioButton;
	}

	/**
	 * This method initializes rbt_smell_4	
	 * 	
	 * @return javax.swing.JRadioButton	
	 */
	private JRadioButton getSmell2JRadioButton() {
		if (smell2JRadioButton == null) {
			smell2JRadioButton = new JRadioButton();
			smell2JRadioButton.setBounds(42, 97, 22, 22);
			smell2JRadioButton.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent e) {
					if(obsessionFlag == false){
						obsessionFlag = true;
					}
					else{
						obsessionFlag = false;
					}						
				}
			});
		}
		return smell2JRadioButton;
	}

	/**
	 * This method initializes rbt_smell_3	
	 * 	
	 * @return javax.swing.JRadioButton	
	 */
	private JRadioButton getSmell3JRadioButton() {
		if (smell3JRadioButton == null) {
			smell3JRadioButton = new JRadioButton();
			smell3JRadioButton.setBounds(279, 50, 21, 22);
			smell3JRadioButton.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent e) {
					if(envyFlag == false){
						envyFlag = true;
					}
					else{
						envyFlag = false;
					}				
				}
			});
		}
		return smell3JRadioButton;
	}

	/**
	 * This method initializes rbt_smell_2	
	 * 	
	 * @return javax.swing.JRadioButton	
	 */

	private JRadioButton getSmell4JRadioButton() {
		if (smell4JRadioButton == null) {
			smell4JRadioButton = new JRadioButton();
			smell4JRadioButton.setBounds(new Rectangle(279, 99, 22, 22));
			smell4JRadioButton.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent e) {
					if(lazyFlag == false){
						lazyFlag = true;
					}
					else{
						lazyFlag = false;
					}
				}
			});
		}
		return smell4JRadioButton;
	}
}